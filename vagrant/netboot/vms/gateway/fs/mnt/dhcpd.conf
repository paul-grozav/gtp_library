# ============================================================================ #
# Author: Tancredi-Paul Grozav <paul@grozav.info>
# ============================================================================ #
# $ sudo cp /mnt/dhcpd.conf /etc/dhcp/dhcpd.conf &&
#   sudo systemctl restart isc-dhcp-server
# ============================================================================ #
option domain-name "home.server.paul.grozav.info";
default-lease-time 600;
max-lease-time 7200;
allow booting;
allow bootp;

# This one line must be outside any bracketed scope
# https://www.rfc-editor.org/rfc/rfc4578.html
# This option is sent by the client in DHCPDISCOVER packet
option architecture-type code 93 = unsigned integer 16;

#option rfc3442-classless-static-routes code 121 = array of integer 8;
#option ms-classless-static-routes code 249 = array of integer 8;

#option space pxelinux;
#option pxelinux.magic code 208 = string;
#option pxelinux.configfile code 209 = text;
#option pxelinux.pathprefix code 210 = text;
#option pxelinux.reboottime code 211 = unsigned integer 32;
# In ISC dhcp versions greater than 3.0, site-local option spaces start at 224,
# not 128 (to be compliant with RFC 3942), so you should define the PXELINUX
# options 208-211 as regular DHCP options, rather than site local ones.
option magic code 208 = string;
option configfile code 209 = text;
option pathprefix code 210 = text;
option reboottime code 211 = unsigned integer 32;



class "pxeclients" {
  match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";

  # The file that it should load from the next server
  # https://wiki.syslinux.org/wiki/index.php?title=PXELINUX
  # filename "lpxelinux.0";
  # This lpxelinux.0 will pull ldlinux.c32 and then pxelinux.cfg/SOMETHING
  # client UUID = "b8945908-d6a6-41a9-611d-74a6ab80b83d"
  # mybootdir/pxelinux.cfg/b8945908-d6a6-41a9-611d-74a6ab80b83d
  # ARP hardware type "1" (i.e. "Ethernet") MAC address "88:99:AA:BB:CC:DD"
  # mybootdir/pxelinux.cfg/01-88-99-aa-bb-cc-dd
  # IPv4 address "192.168.2.91" (in uppercase hexadecimal, "C0A8025B")
  # mybootdir/pxelinux.cfg/C0A8025B
  # mybootdir/pxelinux.cfg/C0A8025
  # mybootdir/pxelinux.cfg/C0A802
  # mybootdir/pxelinux.cfg/C0A80
  # mybootdir/pxelinux.cfg/C0A8
  # mybootdir/pxelinux.cfg/C0A
  # mybootdir/pxelinux.cfg/C0
  # mybootdir/pxelinux.cfg/C
  # mybootdir/pxelinux.cfg/default

  # RFC 4578 defines various machine architectures for PXE as follows:
  if option architecture-type = 00:00 {
    # Intel x86PC (BIOS) (legacy) ROM
    # Both 32-bit and 64-bit clients can boot this pxelinux.0 file
    filename "syslinux/Intel_x86PC/lpxelinux.0";
  } elsif option architecture-type = 00:06 {
    # EFI IA32 (32-bit EFI)
    # This is sometimes (mis)used for legacy (CSM) boot of x64 machines by some
    # vendors.
    filename "syslinux/EFI_IA32/syslinux.efi";
  } elsif option architecture-type = 00:07 {
    # EFI BC (Byte Code) - is a processor agnostic language for device drivers
    # so that the code can be written once and run on any supporting platform.
    # This is sometimes (mis)used for EFI x64 boot by some vendors.
    filename "syslinux/EFI_BC/syslinux.efi";
  } elsif option architecture-type = 00:09 {
    # EFI x86-64 (64-bit EFI)
    filename "syslinux/EFI_x86-64/syslinux.efi";
  }
}


# The next paragraph needs to be modified to fit your case
# 172.17.0.0 is the network where the PXE server and the client are
subnet 192.168.10.0 netmask 255.255.255.0 {
  # Range of IP's to be allocated for PXE clients
  range 192.168.10.100 192.168.10.200;
  option broadcast-address 192.168.10.255;
  #option subnet-mask 255.255.255.0;
  # the gateway address which can be different
  # (access to the internet for instance)
  option routers 192.168.10.2;
  #option routers 192.168.10.0;
  # indicate the dns you want to use
  option domain-name-servers 192.168.10.2;
}

group {
  # IP address of the TFTP server used for booting
  # I think this can also be a host name, as this is
  # resolvable by the client which received a Name Server IP
  next-server 192.168.10.2;
  host Intel_x86PC__pxe_client {
    # Both 32-bit and 64-bit clients can boot this pxelinux.0 file
    # tftp client hardware address
    # qemu client
    #hardware ethernet 52:54:00:12:34:56;
    # virtualbox client
    hardware ethernet 08:00:27:00:00:03;
    # eth0.alice dhcp-discover
    #hardware ethernet 00:1f:29:86:e4:34;
    #hardware ethernet de:ad:c0:de:ca:fe;
    fixed-address 192.168.10.3;

    # PXE-specific configuration directives...
    #option dhcp-class-identifier "PXEClient";
    #option vendor-class-identifier "PXEClient";
    filename "syslinux/Intel_x86PC/lpxelinux.0";
    #filename "openbsd_pxeboot";

    #site-option-space "pxelinux";
    # option space pxelinux;
    #option pxelinux.configfile "default";
    #option pxelinux.pathprefix "/pxelinux.cfg/";
    #option pxelinux.reboottime 30;
    # Always include the following lines for all PXELINUX clients
    option magic f1:00:74:7e;
#    if exists dhcp-parameter-request-list {
#      # Always send the PXELINUX options (specified in hexadecimal, ie: 208 = 0xd0, 209 = 0xd1, etc.)
#      option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list,d0,d1,d2,d3);
#    }
    option configfile "pxelinux.cfg/default";
    option pathprefix "/syslinux/Intel_x86PC/";
    option reboottime 30;
  }

  # 32-bit EFI client
  host EFI_IA32__pxe_client {
    hardware ethernet 08:00:27:00:00:04;
    fixed-address 192.168.10.4;
    filename "syslinux/EFI_IA32/syslinux.efi";
    option magic f1:00:74:7e;
    option configfile "pxelinux.cfg/default";
    option pathprefix "/syslinux/EFI_IA32/";
    option reboottime 30;
  }

  # 64-bit EFI client
  host EFI_x86-64__pxe_client {
    hardware ethernet 08:00:27:00:00:05;
    fixed-address 192.168.10.5;
    filename "syslinux/EFI_x86-64/syslinux.efi";
    option magic f1:00:74:7e;
    option configfile "pxelinux.cfg/default";
    option pathprefix "/syslinux/EFI_x86-64/";
    option reboottime 30;
  }
}
# ============================================================================ #
